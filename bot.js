require("dotenv").config();
const { Telegraf } = require("telegraf");
const fs = require("fs");

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const ADMIN_ID = process.env.ADMIN_ID;

// –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É links.txt
const LINKS_FILE_PATH = "./links.txt";

// –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
const bot = new Telegraf(TOKEN);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
const isAdmin = (ctx) => {
  return ctx.from.id.toString() === ADMIN_ID;
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.command("start", (ctx) => {
  if (isAdmin(ctx)) {
    ctx.reply("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start.");
  } else {
    ctx.reply("–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—É.");
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /addlink
bot.command("addlink", (ctx) => {
  if (!isAdmin(ctx)) {
    ctx.reply("–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—É.");
    return;
  }

  const text = ctx.message.text;
  const match = text.match(/\/addlink (.+)=(.+)/);

  if (!match) {
    ctx.reply("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /addlink –º–µ—Å—è—Ü=—Å—Å—ã–ª–∫–∞");
    return;
  }

  const month = match[1].toLowerCase();
  const link = match[2];

  if (!month || !link) {
    ctx.reply("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /addlink –º–µ—Å—è—Ü=—Å—Å—ã–ª–∫–∞");
    return;
  }

  const fullMonths = [
    "—è–Ω–≤–∞—Ä—è",
    "—Ñ–µ–≤—Ä–∞–ª—è",
    "–º–∞—Ä—Ç–∞",
    "–∞–ø—Ä–µ–ª—è",
    "–º–∞—è",
    "–∏—é–Ω—è",
    "–∏—é–ª—è",
    "–∞–≤–≥—É—Å—Ç–∞",
    "—Å–µ–Ω—Ç—è–±—Ä—è",
    "–æ–∫—Ç—è–±—Ä—è",
    "–Ω–æ—è–±—Ä—è",
    "–¥–µ–∫–∞–±—Ä—è",
  ];

  let fullMonth = null;
  for (const full of fullMonths) {
    if (full.startsWith(month)) {
      fullMonth = full;
      break;
    }
  }

  if (!fullMonth) {
    ctx.reply("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –º–µ—Å—è—Ü.");
    return;
  }

  fullMonth = fullMonth.charAt(0).toUpperCase() + fullMonth.slice(1);

  fs.readFile(LINKS_FILE_PATH, "utf8", (err, data) => {
    if (err) {
      console.error(`–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: ${err.message}`);
      ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞.");
      return;
    }

    const lines = data.split("\n");
    const updatedLines = lines
      .map((line) => {
        const [existingMonth, existingLink] = line.split("=");
        if (
          existingMonth &&
          existingMonth.toLowerCase() === fullMonth.toLowerCase()
        ) {
          return `${fullMonth}=${link}`;
        }
        return line;
      })
      .filter((line) => line.trim() !== "");

    const uniqueLinks = new Set();
    const finalLines = updatedLines.filter((line) => {
      const [, existingLink] = line.split("=");
      if (uniqueLinks.has(existingLink)) {
        return false;
      }
      uniqueLinks.add(existingLink);
      return true;
    });

    if (
      !finalLines.some((line) =>
        line.toLowerCase().startsWith(`${fullMonth.toLowerCase()}=`)
      )
    ) {
      finalLines.push(`${fullMonth}=${link}`);
    }

    fs.writeFile(LINKS_FILE_PATH, finalLines.join("\n"), (err) => {
      if (err) {
        console.error(`–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª: ${err.message}`);
        ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª.");
      } else {
        console.log(`–û–±–Ω–æ–≤–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å: ${fullMonth}=${link}`);
        ctx.reply("–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∞.");
      }
    });
  });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /looklinks
bot.command("looklinks", (ctx) => {
  if (!isAdmin(ctx)) {
    ctx.reply("–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—É.");
    return;
  }

  if (!fs.existsSync(LINKS_FILE_PATH)) {
    ctx.reply("–§–∞–π–ª links.txt –Ω–µ –Ω–∞–π–¥–µ–Ω.");
    return;
  }

  fs.readFile(LINKS_FILE_PATH, "utf8", (err, data) => {
    if (err) {
      console.error(`–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: ${err.message}`);
      ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞.");
      return;
    }

    ctx.reply(`–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ links.txt:\n${data}`);
  });
});

bot.on("message", (ctx) => {
  if (ctx.message.text) {
    const text = ctx.message.text;

    console.log(`–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: ${text}`);

    const dateRegex =
      /(\d{1,2})(?:[\s.,-]+)(\d{1,2})\s*(—è–Ω–≤–∞—Ä—è|—Ñ–µ–≤—Ä–∞–ª—è|–º–∞—Ä—Ç–∞|–∞–ø—Ä–µ–ª—è|–º–∞—è|–∏—é–Ω—è|–∏—é–ª—è|–∞–≤–≥—É—Å—Ç–∞|—Å–µ–Ω—Ç—è–±—Ä—è|–æ–∫—Ç—è–±—Ä—è|–Ω–æ—è–±—Ä—è|–¥–µ–∫–∞–±—Ä—è|—è–Ω–≤–∞—Ä—å|—Ñ–µ–≤—Ä–∞–ª—å|–º–∞—Ä—Ç|–∞–ø—Ä–µ–ª—å|–º–∞–π|–∏—é–Ω—å|–∏—é–ª—å|–∞–≤–≥—É—Å—Ç|—Å–µ–Ω—Ç—è–±—Ä—å|–æ–∫—Ç—è–±—Ä—å|–Ω–æ—è–±—Ä—å|–¥–µ–∫–∞–±—Ä—å|—è–Ω–≤|—Ñ–µ–≤|–º–∞—Ä|–∞–ø—Ä|–∏—é–Ω|–∏—é–ª|–∞–≤–≥|—Å–µ–Ω|–æ–∫—Ç|–Ω–æ—è|–¥–µ–∫)/i;
    const match = text.match(dateRegex);

    if (match) {
      const startDate = match[1];
      const endDate = match[2];
      const month = match[3];

      console.log(`–ù–∞–π–¥–µ–Ω—ã –¥–∞—Ç—ã: ${startDate}, ${endDate}, ${month}`);

      const monthWithCorrectEnding = getMonthWithCorrectEnding(month);

      // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      let response = `\`\`\`\n–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ üëãüòÉ –≤—ã –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª–∏ –∫–≤–∞—Ä—Ç–∏—Ä—É –≤ –ö–∞–∑–∞–Ω–∏ —Å ${startDate} –ø–æ ${endDate} ${monthWithCorrectEnding}\n\n–ú–µ–Ω—è –∑–æ–≤—É—Ç –†—É—Å–ª–∞–Ω) –±—É–¥—É –∫—É—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –≤–∞—à–µ–≥–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è.\n–£ –Ω–∞—Å –±–µ—Å–∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –∑–∞—Å–µ–ª–µ–Ω–∏–µ, –∑–∞ –¥–µ–Ω—å –¥–æ –Ω–µ–≥–æ –ø—Ä–∏—à–ª—é –≤–∞–º –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n\n–ï—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–∏—à–∏—Ç–µ, –µ—Å–ª–∏ —Å—Ä–æ—á–Ω–æ –∑–≤–æ–Ω–∏—Ç–µ –ø–æ –Ω–æ–º–µ—Ä—É +7(904)661-09-49\n\n`;

      // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª links.txt –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
      fs.readFile(LINKS_FILE_PATH, "utf8", (err, data) => {
        if (err) {
          console.error(`–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: ${err.message}`);
          return;
        }

        const lines = data.split("\n");
        const monthPrefix = month.toLowerCase().slice(0, 3);
        const linkLine = lines.find((line) => {
          const [existingMonth] = line.split("=");
          return existingMonth.toLowerCase().startsWith(monthPrefix);
        });

        if (linkLine) {
          const [, link] = linkLine.split("=");
          response += `–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ üòÄ –≤—ã—Å—ã–ª–∞—é –≤–∞–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –∫ –∑–∞—Å–µ–ª–µ–Ω–∏—é\n‚Äî‚Äî‚Äî ‚Ä¢‚Ä¢‚Ä¢ ‚Äî‚Äî‚Äî\n${link}\n\`\`\``;
        } else {
          response += `–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ üòÄ –≤—ã—Å—ã–ª–∞—é –≤–∞–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –∫ –∑–∞—Å–µ–ª–µ–Ω–∏—é\n‚Äî‚Äî‚Äî ‚Ä¢‚Ä¢‚Ä¢ ‚Äî‚Äî‚Äî\n\`\`\``;
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        ctx.reply(response, { parse_mode: "Markdown" });
      });
    } else if (text.startsWith("https://lknpd.nalog.ru")) {
      const response = `–ü–æ–ª—É—á–∏–ª, —Å–ø–∞—Å–∏–±–æ –∑–∞ —Å–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å.\n–ü—Ä–∏–∫—Ä–µ–ø–ª—é [–∑–¥–µ—Å—å –≤–∞—à —á–µ–∫](${text})\n‚Äî‚Äî‚Äî                                                 ‚Ä¢ ‚Ä¢ ‚Ä¢`;
      ctx.reply(response, { parse_mode: "Markdown" });
    } else {
      console.log("–î–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã");
    }
  }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –º–µ—Å—è—Ü–∞ –≤ —Ñ–æ—Ä–º—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –æ–∫–æ–Ω—á–∞–Ω–∏–µ–º
function getMonthWithCorrectEnding(month) {
  const monthMap = {
    —è–Ω–≤–∞—Ä—å: "—è–Ω–≤–∞—Ä—è",
    —Ñ–µ–≤—Ä–∞–ª—å: "—Ñ–µ–≤—Ä–∞–ª—è",
    –º–∞—Ä—Ç: "–º–∞—Ä—Ç–∞",
    –∞–ø—Ä–µ–ª—å: "–∞–ø—Ä–µ–ª—è",
    –º–∞–π: "–º–∞—è",
    –∏—é–Ω—å: "–∏—é–Ω—è",
    –∏—é–ª—å: "–∏—é–ª—è",
    –∞–≤–≥—É—Å—Ç: "–∞–≤–≥—É—Å—Ç–∞",
    —Å–µ–Ω—Ç—è–±—Ä—å: "—Å–µ–Ω—Ç—è–±—Ä—è",
    –æ–∫—Ç—è–±—Ä—å: "–æ–∫—Ç—è–±—Ä—è",
    –Ω–æ—è–±—Ä—å: "–Ω–æ—è–±—Ä—è",
    –¥–µ–∫–∞–±—Ä—å: "–¥–µ–∫–∞–±—Ä—è",
    —è–Ω–≤: "—è–Ω–≤–∞—Ä—è",
    —Ñ–µ–≤: "—Ñ–µ–≤—Ä–∞–ª—è",
    –º–∞—Ä: "–º–∞—Ä—Ç–∞",
    –∞–ø—Ä: "–∞–ø—Ä–µ–ª—è",
    –∏—é–Ω: "–∏—é–Ω—è",
    –∏—é–ª: "–∏—é–ª—è",
    –∞–≤–≥: "–∞–≤–≥—É—Å—Ç–∞",
    —Å–µ–Ω: "—Å–µ–Ω—Ç—è–±—Ä—è",
    –æ–∫—Ç: "–æ–∫—Ç—è–±—Ä—è",
    –Ω–æ—è: "–Ω–æ—è–±—Ä—è",
    –¥–µ–∫: "–¥–µ–∫–∞–±—Ä—è",
  };

  return monthMap[month] || month;
}

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch();

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
bot.catch((err) => {
  console.error(`–û—à–∏–±–∫–∞: ${err.message}`);
});
